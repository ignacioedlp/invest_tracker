import Head from "next/head";
import React, { useState } from "react";
import { AgGridReact } from "ag-grid-react";
import "ag-grid-community/dist/styles/ag-grid.css";
import "ag-grid-community/dist/styles/ag-theme-alpine.css";
import { Grid, Row } from "@nextui-org/react";
import { Card } from "../components/index.js";
import {
  obtenerDiaMasGanado,
  obtenerConMenosGanancia,
  obtenerGanaciasDeHoy,
} from "../utils/funciones";
import { getAllInvests } from "../prisma/invest";

export default function Home({ invests }) {
  const infoTable = [
    { field: "createdAt", sortable: true, filter: true },
    { field: "dolars", sortable: true, filter: true },
    { field: "pesos", sortable: true, filter: true },
    { field: "usdars", sortable: true, filter: true },
  ];
  const [rowData] = useState(invests);
  const [columnDefs] = useState(infoTable);
  

  return (
    <div>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid.Container gap={2} justify="flex-start">
        <Row>
          <Grid sm={12} md={7}>
            <div
              className="ag-theme-alpine mx-auto my-2"
              style={{ width: 600, height: 600 }}
            >
              <AgGridReact
                rowData={rowData}
                columnDefs={columnDefs}
              ></AgGridReact>
            </div>
          </Grid>
          <Grid sm={12} md={7}>
            <Grid.Container gap={2} justify="flex-start">
              <Grid xs={12} sm={5}>
                <Card data={obtenerDiaMasGanado(rowData)} />
              </Grid>
              <Grid xs={12} sm={5}>
                <Card data={obtenerConMenosGanancia(rowData)} />
              </Grid>
              <Grid xs={12} sm={5}>
                <Card data={obtenerGanaciasDeHoy(rowData)} />
              </Grid>
            </Grid.Container>
          </Grid>
        </Row>
      </Grid.Container>
    </div>
  );
}

export const getServerSideProps = async ({ req }) => {
  const invests = await getAllInvests();

  const updatedInvest = invests.map((invest) => ({
    ...invest,
    updatedAt: invest.updatedAt.toString(),
    createdAt: invest.createdAt.toString(),
    pesos: invest.usdars * invest.dolars,
  }));

  return {
    props: {
      invests: updatedInvest,
    },
  };
};
